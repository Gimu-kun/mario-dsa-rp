.play-page {
    position: relative;
    display: flex;
    align-items: center;
    justify-content: space-between;
    width: 100%;
    height: fit-content;
    min-height: 90vh;
    background-image: repeating-linear-gradient(-45deg,
            #ffffff,
            #ffffff 10px,
            #ebebeb 10px,
            #ebebeb 20px);
}

#room_container{
    display: block;
}

#countdown-container {
    display: flex;
    justify-content: center;
    align-items: center;
    background-color: rgba(0, 0, 0, 0.1);
    width: 100%;
    height: 100%;
    font-size: 80px;
    font-weight: bold;
}

#start-dialog {
    display: block;
}

#game-container {
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    row-gap: 20px;
    padding: 50px 0;
    width: 100%;
    height: 100%;
}

#game-container .playing-container {
    flex: 1;
    width: 90%;
}

.question {
    position: relative;
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    flex: 3;
    border: none;
    width: 500px;
    padding: 5px;
    font-size: 20px;
    background-color: var(--btn-primary-color);
    cursor: pointer;
    z-index: 10;
}

.question_decor::before,
.question_decor::after {
    content: "";
    position: absolute;
    width: 5px;
    height: 5px;
    border-radius: 50%;
    background-color: #f08200;
    box-shadow: 1px 1px 0 rgba(7, 1, 2, 0.16) inset;
    z-index: 5;
}

.question_decor.left::before {
    top: 5px;
    left: 5px;
}

.question_decor.left::after {
    bottom: 5px;
    left: 5px;
}

.question_decor.right::before {
    top: 5px;
    right: 5px;
}

.question_decor.right::after {
    bottom: 5px;
    right: 5px;
}

.question_txt {
    color: var(--btn-primary-txt-color);
}

.question_txt.title {
    font-size: 24px;
    font-weight: 700;
    margin: 0;
}

.item-table {
    border-collapse: collapse;
    width: 100%;
    font-size: 16px;
    text-align: center;
    background: white;
    box-shadow: 0 2px 6px rgba(0, 0, 0, 0.2);
}

.item-table th,
.item-table td {
    border: 1px solid #ccc;
    padding: 8px 12px;
}

.item-table thead {
    background-color: #444;
    color: #fff;
}

.item-table tbody tr:nth-child(even) {
    background-color: #f9f9f9;
}

.item-table tbody tr:hover {
    background-color: #e0f0ff;
    transition: 0.3s;
}

.dp-table-wrapper {
    overflow: auto;          /* Cho phép scroll ngang và dọc */
    max-height: 600px;       /* Chiều cao tối đa của bảng */
    max-width: 100%;         /* Không vượt màn hình */
    border: 1px solid #ccc;
}

.dp-table {
    border-collapse: collapse;
    width: 100%;             /* Khi ít cột: bảng căng full */
    /*table-layout: fixed;*/ /* chia đều các cột */
    text-align: center;
    background: white;
    font-size: 18px;
    min-width: 80px;         /* giữ tối thiểu mỗi cột */
}

.dp-table th,
.dp-table td {
    border: 1px solid #ccc;
    padding: 8px;
    min-width: 80px;         /* mỗi cột >= 80px */
    height: 50px;
    word-wrap: break-word;
}

/* Freeze header ngang */
.dp-table thead th {
    position: sticky;
    top: 0;
    background: #444;   /* nền header */
    color: #fff;
    font-weight: bold;
    z-index: 10;
}

/* Freeze cột đầu tiên */
.dp-table td:first-child,
.dp-table th:first-child {
    position: sticky;
    left: 0;
    background: #f1f3f5; /* nền khác cho cột đầu */
    z-index: 11;
}

/* Ô [0,0] nổi bật hơn */
.dp-table thead th:first-child {
    z-index: 12;
    background: #333;
    color: #fff;
    font-weight: bold;
}

.dp-table tbody tr:hover {
    background-color: #e0f0ff;
    transition: 0.3s;
}

.dp-input-field {
    text-align: center;
    width: 100%;             /* fit đúng chiều rộng ô */
    box-sizing: border-box;  /* tránh tràn ra ngoài */
    display: block;          /* input chiếm hết chiều rộng ô */
}

.hidden-cell {
    background-color: #f5f5f5;
    color: transparent;
    transition: all 0.3s ease;
}

.hidden-cell.revealed {
    color: black;
    font-weight: bold;
    background-color: #e6ffe6;
}

.dp-input-field.correct {
    color: green;
    font-weight: bold;
}

.dp-input-field.revealed {
    background-color: #e0f7fa;
    color: #00796b;
    font-weight: bold;
    padding: 5px;
    border-radius: 5px;
    display: inline-block;
}

#game-container .btn-container {
    width: 100%;
}

.btn-container {
    display: flex;
    justify-content: center;
    align-items: center;
    column-gap: 50px;
}

.btn-container button {
    position: relative;
    padding: 5px 15px;
    display: flex;
    align-items: center;
    font-size: 17px;
    font-weight: 600;
    text-decoration: none;
    cursor: pointer;
    border-radius: 25px;
    outline: none;
    overflow: hidden;
    transition: color 0.3s 0.1s ease-out;
    text-align: center;
    z-index: 0;
}

.btn-container button.complete{
    border: 1px solid var(--luigi-color);
    background-color: var(--luigi-color);
    color: #ffffff;
}

.btn-container button.clean{
    border: 1px solid var(--mario-color);
    background-color: var(--mario-color);
    color: #ffffff;
}

.btn-container button::before {
    position: absolute;
    top: 0;
    right: 0;
    bottom: 0;
    margin: auto;
    content: '';
    border-radius: 50%;
    display: block;
    width: 20em;
    height: 20em;
    left: -7em;
    text-align: center;
    transition: box-shadow 0.5s ease-out;
    z-index: -1;
}

.btn-container button.clean:hover {
    border: 1px solid rgb(255, 240, 240);
}

.btn-container button.clean:hover::before {
    box-shadow: inset 0 0 0 10em rgb(255, 60, 60);
}

.btn-container button.complete:hover::before {
    box-shadow: inset 0 0 0 10em rgb(60, 129, 60);
}

.btn-container button span {
    margin: 10px;
}

.correct {
    color: green;
    font-weight: bold;
}

.incorrect {
    color: red;
    font-weight: bold;
}


/* Căn giữa toàn màn hình */
.congrats-overlay {
    position: fixed;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    z-index: 9999;
    background-color: rgba(255, 255, 255, 0.95);
    padding: 2rem 3rem;
    border-radius: 1rem;
    text-align: center;
    display: none;
    box-shadow: 0 10px 30px rgba(0,0,0,0.2);
}

/* Chữ lớn và hiệu ứng shake */
.congrats-text {
    font-size: 3rem;
    color: #00C851;
    animation: shake 0.5s ease-in-out infinite;
}

.congrats-sub {
    font-size: 1.5rem;
    margin-top: 1rem;
    color: #444;
}

/* Keyframes hiệu ứng shake */
@keyframes shake {
    0% { transform: translateX(0); }
    25% { transform: translateX(-5px); }
    50% { transform: translateX(5px); }
    75% { transform: translateX(-5px); }
    100% { transform: translateX(0); }
}

.btn-ranking {
    padding: 0.5rem 1.5rem;
    font-size: 1.2rem;
    background-color: #00C851;
    color: white;
    border: none;
    border-radius: 5px;
    cursor: pointer;
    transition: background-color 0.3s ease;
}

.btn-ranking:hover {
    background-color: #007e39;
}


.cube {
    width: 100px;
    height: 100px;
    position: relative;
    transform-style: preserve-3d;
    transform: rotateX(-15deg) rotateY(-15deg);
}

.face {
    position: absolute;
    width: 100px;
    height: 100px;
    background: rgba(255, 255, 255, 0.9);
    border: 2px solid #333;
    box-sizing: border-box;
    font-size: 20px;
    font-weight: bold;
    color: #000;
    display: flex;
    align-items: center;
    justify-content: center;
    background-size: cover;
    background-position: center;
    background-repeat: no-repeat;
}

.front  { transform: translateZ(50px); background-image: url("../assets/block-bg.jpg"); }
.back   { transform: rotateY(180deg) translateZ(50px); background-image: url("../assets/block-bg.jpg"); }
.right  { transform: rotateY(90deg) translateZ(50px); background-image: url("../assets/block-bg.jpg"); }
.left   { transform: rotateY(-90deg) translateZ(50px); background-image: url("../assets/block-bg.jpg"); }
.top    { transform: rotateX(90deg) translateZ(50px); background-image: url("../assets/block-bg.jpg"); }
.bottom { transform: rotateX(-90deg) translateZ(50px); background-image: url("../assets/block-bg.jpg"); }


.item-info {
    display: flex;
    flex-direction: column;
    align-items: center;
    font-weight: bold;
}

.item-value {
    color: #22c55e; /* xanh lá = lợi ích */
    font-size: 1.2rem;
}

.item-weight {
    color: #f97316; /* cam = gánh nặng */
    font-size: 1rem;
}

.knapsack-img {
    position: relative;
    display: inline-block;
    width: 250px;
    height: 250px;
}

.knapsack-img img {
    width: 100%;
    height: 100%;
    object-fit: contain;
    transform: scaleY(-1);
}

.fly-to-bag {
    position: fixed; /* quan trọng: dùng fixed để tính theo viewport */
    z-index: 9999;
    pointer-events: none;
    width: 60px; /* thu nhỏ lại chút để bay đẹp hơn */
    height: 60px;
    animation: flyToBag 0.6s ease forwards;
}

.fly-to-bag {
    position: fixed;
    z-index: 9999;
    pointer-events: none;
    width: 60px;
    height: 60px;
    --dx: 0px; /* mặc định */
    --dy: 0px; /* mặc định */
    animation: flyToBag 0.6s ease forwards;
}

@keyframes flyToBag {
    from {
        transform: translate(0, 0) scale(1);
        opacity: 1;
    }
    to {
        transform: translate(var(--dx, 0), var(--dy, 0)) scale(0.2);
        opacity: 0;
    }
}

.fly-back {
    position: fixed;
    z-index: 9999;
    pointer-events: none;
    width: 60px;
    height: 60px;
    --dx: 0px;
    --dy: 0px;
    animation: flyBack 0.6s ease forwards;
}

@keyframes flyBack {
    from {
        transform: translate(0, 0) scale(0.2);
        opacity: 0.8;
    }
    to {
        transform: translate(var(--dx, 0), var(--dy, 0)) scale(1);
        opacity: 1;
    }
}





